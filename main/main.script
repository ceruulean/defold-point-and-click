function init(self)
	-- Tell the proxy "myproxy" to start loading.
	msg.post("#overworld", "load")
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)

end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		-- New world is loaded. Init and enable it.
		msg.post(sender, "init")
		msg.post(sender, "enable")
	elseif message_id == hash("stage_loaded") then
		print("stage loaded")
	end
end

function on_input(self, action_id, action)
	if action_id == hash("interact") then
-- 
-- 		local coords = camera.screen_to_world(CAMERA_ID, vmath.vector3(action.x, action.y, 0.0))
-- 		coords.z = -300.0
-- 
-- 		local ray_end = vmath.vector3(coords.x, coords.y, 200.0)
-- 		print(coords, ray_end)
-- 		coords.y = coords.y + 1
-- 		coords.x = coords.x + 1
-- 		local result = physics.raycast(coords, ray_end, { hash("interact") })
-- 		print(result)
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
